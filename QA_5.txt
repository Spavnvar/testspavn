Порядок выполнения лабораторной работы #5

1. Взять какой-нибудь курсовой проект, натравить на него любой статический анализатор: https://ru.wikipedia.org/wiki/Статический_анализ_кода#Инструменты_статического_анализа

2. Посмотреть на результаты, и описать самое полезное предупреждение. Описать ложноположительное. Если ничего интересного нет, добавить какой-нибудь явно некорректный код, например ошибки при невнимательном редактировании после копирования/вставки, недостижимые ни при каких условиях участки кода, и посмотреть, что он скажет.  

Примеры багов из-за копипасты: https://pvs-studio.com/ru/blog/posts/cpp/0260/

У PVC-Studio ещё и на Хабре отличный блог, вот, например, их ТОП-10 багов в ASP.NET: https://habr.com/ru/company/pvs-studio/blog/654395/

3. Прогнать какой-нибудь проект любым динамическим анализатором https://ru.wikipedia.org/wiki/Динамический_анализ_кода#Примеры_утилит и если утечек памяти там нет, организовать её искусственно и поймать. Если утечки памяти для вашего любимого языка программирования не очень актуальны, можно попробовать какую-нибудь другую полезную функциональность. 

4. Сделать отчет о проделанной работе, залить на ИЛИАС. 

