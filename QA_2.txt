Порядок выполнения лабораторной работы #2

1. Придумать баг, который мог бы появиться в программе, на которую вы писали спецификацию. Желательно, чтобы было несколько шагов для его воспроизведения, то есть, повторялся он не всегда, а только при определенных условиях.  

2. Создать issue на GitHub (в репозитории вашего потока), с заголовком, начинающимся с вашей фамилии, например "[Торвальдс] Не получается удалить сотрудника, фамилия которого содержит тире, если его запись была отредактирована" 

3. Назначить вашего напарника ответственным за баг. Если делаете не в паре, назначить меня. 

4. Заполнить поля в правой колонке и текст багрепорта в соответствии с рекомендациями: https://github.com/yakov-eremin/PI8X/issues/2

5. В полноценных багтрекерах можно прикреплять медиафайлы (тут сделайте ссылками на облачные сервисы типа Яндекс.Диск), выставлять приоритеты отдельным полем и т.д. В данном случае придется обойтись текстом (и полями, которые есть в правой колонке).   

6. Скриншот вашего багрепорта поместить в документ с отчетом.  

7. Выбрать фреймворк для unit-тестов, настроить его в вашей IDE, прочитать документацию. 

8. Написать 10 любых unit-тестов либо для вашего собственного проекта, либо для проекта вашего напарника. Если вы писали спецификацию на сторонний OpenSource проект, можете загрузить в репозиторий какой-нибудь из своих проектов (если не загружали), и использовать его. 

9. Залить в репозиторий папку с тестами

10. Сделать отчет о проделанной работе (с кодом тестов и тестируемых методов), залить на ИЛИАС. 
